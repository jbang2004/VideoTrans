syntax = "proto3";

package cosyvoice;

// ========== Service 定义 ==========
service CosyVoiceService {
  rpc NormalizeText (NormalizeTextRequest) returns (NormalizeTextResponse);
  rpc ExtractSpeakerFeatures (ExtractSpeakerFeaturesRequest) returns (ExtractSpeakerFeaturesResponse);
  rpc GenerateTTSTokens (GenerateTTSTokensRequest) returns (GenerateTTSTokensResponse);
  rpc Token2Wav (Token2WavRequest) returns (Token2WavResponse);
}

// ========== 自定义消息结构 ==========

// 每段文本的 tokens
message TextSegment {
  repeated int32 tokens = 1;
}

// 每段 TTS tokens 及其段 uuid
message TTSOneSegment {
  string uuid = 1;          // 分段的uuid
  repeated int64 tokens = 2; // 该段对应的TTS tokens
}

// ========== Features: 在RPC中传递的核心对象 ==========
message Features {
  // a) 文本相关
  repeated string normalized_text_segments = 1; // 仅用于查看分词结果
  repeated TextSegment text_segments = 2;       // 每段文本 token 列表 (二维)

  // b) 说话人相关
  repeated float embedding = 3;
  repeated float prompt_speech_feat = 4;
  int32 prompt_speech_feat_len = 5;
  repeated int32 prompt_speech_token = 6;
  int32 prompt_speech_token_len = 7;

  // c) TTS tokens - 同样分段存储
  repeated TTSOneSegment tts_segments = 8;
}

// ========== RPC 请求与响应 ==========

// 1) NormalizeText
message NormalizeTextRequest {
  string text = 1; // 待标准化文本
}

message NormalizeTextResponse {
  Features features = 1; // 返回分段tokens或其他信息
}

// 2) ExtractSpeakerFeatures
message ExtractSpeakerFeaturesRequest {
  bytes audio = 1;       // 音频数据
  int32 sample_rate = 2; // 采样率
}

message ExtractSpeakerFeaturesResponse {
  Features features = 1; 
}

// 3) GenerateTTSTokens
message GenerateTTSTokensRequest {
  Features features = 1; 
  string uuid = 2;       // 可选：复用uuid
}

message GenerateTTSTokensResponse {
  Features features = 1; 
  int32 duration_ms = 2; 
}

// 4) Token2Wav
message Token2WavRequest {
  Features features = 1;
  float speed = 2;
}

message Token2WavResponse {
  bytes audio = 1;        // 合成音频 int16
  float duration_sec = 2; // 合成时长
}
