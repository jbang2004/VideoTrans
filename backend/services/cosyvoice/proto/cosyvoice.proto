syntax = "proto3";

package cosyvoice;

// ========== Service 定义 ==========
service CosyVoiceService {
  rpc NormalizeText (NormalizeTextRequest) returns (NormalizeTextResponse);
  rpc ExtractSpeakerFeatures (ExtractSpeakerFeaturesRequest) returns (ExtractSpeakerFeaturesResponse);
  rpc GenerateTTSTokens (GenerateTTSTokensRequest) returns (GenerateTTSTokensResponse);
  rpc Token2Wav (Token2WavRequest) returns (Token2WavResponse);
  rpc Cleanup (CleanupRequest) returns (CleanupResponse);
}

// ========== RPC 请求与响应 ==========

// 1) NormalizeText
message NormalizeTextRequest {
  string text = 1;
}

message NormalizeTextResponse {
  string text_uuid = 1;  // 返回文本特征的UUID
}

// 2) ExtractSpeakerFeatures
message ExtractSpeakerFeaturesRequest {
  string speaker_uuid = 1;  // 说话人特征的UUID
  bytes audio = 2;         // 音频数据
  int32 sample_rate = 3;
}

message ExtractSpeakerFeaturesResponse {
  bool success = 1;
}

// 3) GenerateTTSTokens
message GenerateTTSTokensRequest {
  string text_uuid = 1;     // 文本特征的UUID
  string speaker_uuid = 2;  // 说话人特征的UUID
}

message GenerateTTSTokensResponse {
  int32 duration_ms = 1;
  bool success = 2;
}

// 4) Token2Wav
message Token2WavRequest {
  string text_uuid = 1;     // 文本特征的UUID
  string speaker_uuid = 2;  // 说话人特征的UUID
  float speed = 3;
}

message Token2WavResponse {
  bytes audio = 1;
  float duration_sec = 2;
}

// 5) Cleanup
message CleanupRequest {
  string uuid = 1;          // 要清理的UUID（可以是text_uuid或speaker_uuid）
  bool is_speaker = 2;      // 是否清理说话人特征
}

message CleanupResponse {
  bool success = 1;
}